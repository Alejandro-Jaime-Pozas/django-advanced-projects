"""
Django settings for advanced_projects project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from os import getenv # allows for environment variable handling

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-h^xm05c1xv(duh_0o8k5lgs2dyma(k$arznm+t_%x$ub$^zt#4' # this should also be an env variable

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getenv('IS_DEVELOPMENT', True) # TURN OFF FOR PRODUCTION

ALLOWED_HOSTS = [
    getenv('APP_HOST') # you choose this name and provide in server env
] # ADD THE HOST DOMAIN WHERE APPLICATION WILL BE HOSTED


# Application definition

INSTALLED_APPS = [
    'blog', # manually add blog app so django recognizes it
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'advanced_projects.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates' # add this manually so django recognizes templates folder
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'advanced_projects.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = BASE_DIR / 'staticfiles' # MANUALLY ADDED FOR PRODUCTION TO COLLECT ALL STATIC FILES AND SERVE THEM ALL FROM ONE FOLDER; WILL RUN WHEN py manage.py collectstatic
STATIC_URL = 'static/'

# manually added this to allow other dirs
STATICFILES_DIRS = [
    BASE_DIR / 'static' # allows for global static dir inclusion
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# DON'T USE THE SAME FOLDER FOR STATIC AND USER UPLOADED MEDIA FILES, THIS IS UNSECURE SINCE COMBINING USER BASED AND SERVER BASED FOLDERS ALLOWS HACKING
MEDIA_ROOT = BASE_DIR / 'uploads' # root folder that will be used to store image files
MEDIA_URL = '/files/' # this is how the site url will look like for accessing image uploads